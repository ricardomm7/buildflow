@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Client" as Client
participant "ProductionLine" as ProductionLine
participant "Order" as Order
participant "Map" as Map
participant "List<Order>" as ListOrder

Client -> ProductionLine : newOrder(order, priority)
activate ProductionLine

ProductionLine -> Map : computeIfAbsent(priority)
activate Map
Map -> ListOrder : get or create LinkedList<Order>
deactivate Map
activate ListOrder
ListOrder --> ProductionLine : LinkedList<Order>
deactivate ListOrder
ProductionLine -> ListOrder : add(order)
deactivate ListOrder

ProductionLine -> Client : new order added (success)
deactivate ProductionLine

Client -> ProductionLine : removeOrderFromPL(orderId)
activate ProductionLine

ProductionLine -> ProductionLine : searchOrder(orderId)
activate ProductionLine

ProductionLine -> Map : iterate priorities
activate Map
Map -> ListOrder : get List<Order>
deactivate Map
activate ListOrder

ProductionLine -> Order : getId()
activate Order
Order --> ProductionLine : id matches
deactivate Order

ProductionLine -> ListOrder : remove(order)
deactivate ListOrder
deactivate ProductionLine

ProductionLine -> Client : order removed (success)
deactivate ProductionLine

Client -> ProductionLine : markOrderAsCompleted(orderId)
activate ProductionLine

ProductionLine -> ProductionLine : searchOrder(orderId)
activate ProductionLine

ProductionLine -> Map : iterate priorities
activate Map
Map -> ListOrder : get List<Order>
deactivate Map

ProductionLine -> Order : getId()
activate Order
Order --> ProductionLine : id matches
deactivate Order

ProductionLine -> Order : setReady(true)
activate Order
Order -> Order : setDeliveryDate(LocalDate.now())
deactivate Order

ProductionLine -> ProductionLine : removeOrderFromPL(orderId)
deactivate ProductionLine

ProductionLine -> Client : order marked as completed
deactivate ProductionLine
@enduml
