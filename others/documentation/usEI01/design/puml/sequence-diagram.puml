@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Client" as Client
participant "MapLinked<T, Q, ID>" as MapLinked
participant "LinkedList<T>" as ListItems
participant "T (Item)" as Item

Client -> MapLinked : newItem(item, key)
activate MapLinked

MapLinked -> MapLinked : computeIfAbsent(key)
MapLinked -> ListItems : get or create LinkedList<T>
activate ListItems
ListItems --> MapLinked : LinkedList<T>
deactivate ListItems

MapLinked -> ListItems : add(item)
activate ListItems
ListItems -> MapLinked : (success)
deactivate ListItems
MapLinked -> Client : item added (success)
deactivate MapLinked

Client -> MapLinked : remove(item, key)
activate MapLinked

MapLinked -> ListItems : get(key)
activate ListItems
ListItems -> Item : getId()
activate Item

Item --> ListItems : id matches
deactivate Item
ListItems -> MapLinked : remove(item)
deactivate ListItems
MapLinked -> Client : item removed (success)
deactivate MapLinked

Client -> MapLinked : markItemAsCompleted(itemId)
activate MapLinked

MapLinked -> MapLinked : searchById(itemId)
activate MapLinked
MapLinked -> ListItems : iterate through all lists
deactivate MapLinked
activate ListItems
ListItems -> Item : getId()
activate Item

Item --> ListItems : id matches
Item -> Item : setReady(true)
Item -> Item : setCompletionDate(LocalDate.now())
Item -> ListItems : (success)
deactivate Item
ListItems -> MapLinked : (success)
deactivate ListItems

MapLinked -> Client : item marked as completed
deactivate MapLinked
@enduml
